[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "wheel"]

[tool.poe.executor]
type = "simple"

[tool.poe.tasks]
# Conda
conda-create = {shell = "source .env.shared && conda env create -n $PROJECT_NAME -f environment.yaml"}
conda-update = {shell = "source .env.shared && conda env update -f $PROJECT_NAME environment.yaml"}
# One-stop setup
_install-editable = {shell = "source .env.shared && source bin/conda-activate.sh && conda-activate && pip install -e ."}
_setup-bucket = {shell = "sh bin/create_bucket.sh"}
# _setup-git = "pre-commit install"
_setup-git = {shell = "source .env.shared && source bin/conda-activate.sh && conda-activate && pre-commit install"}
_setup-github = {shell = "bash bin/create_repo.sh"}
_setup-metaflow = {shell = "sh bin/install_metaflow_aws.sh"}
init = [
  "install",
  "_setup-github",
  "_setup-bucket",
]
install = [
  "conda-create",
  "_install-editable",
  "_setup-git",
  "_setup-metaflow",
]
# Data
inputs-pull = {shell = "source .env.shared && aws s3 sync s3://$BUCKET/inputs inputs --profile ${PROFILE:-default}"}
inputs-push = {shell = "source .env.shared && aws s3 sync inputs s3://$BUCKET/inputs  --profile ${PROFILE:-default}"}
# Reports
report = "echo TODO"
# Docs
doc-build = [
  {shell = "source .env.shared && sphinx-apidoc -o docs/api $REPO_NAME"},
  {shell = "source .env.shared && sphinx-build -b html docs/ docs/_build"},
]
doc-open = "$BROWSER docs/_build/index.html"
